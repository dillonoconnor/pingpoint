<.modal id="create-room-modal">
  <.simple_form
    autocomplete="off"
    class="flex flex-col justify-between items-center gap-8"
    for={@create_room_form}
    phx-change="validate_room"
    phx-submit="save_room"
  >
    <:inputs>
      <div class="w-full">
        <.input field={@create_room_form[:name]} label="Name" phx-debounce="500" />
      </div>
      <.button class="bg-base-200">Submit</.button>
    </:inputs>
  </.simple_form>
</.modal>

<section class="grow mt-8 flex justify-between gap-16">
  <nav class="w-48">
    <ul>
      <li>
        <.button
          class="flex gap-4 items-center justify-start bg-neutral-content text-primary-content hover:bg-gray-300 rounded-tl-lg rounded-tr-lg rounded-bl-none rounded-br-none w-full"
          phx-click={show_modal("create-room-modal")}
        >
          <.icon name="hero-plus" /> Add Room
        </.button>
      </li>
      <div phx-update="stream" id="rooms-nav">
        <li
          :for={{id, room} <- @streams.rooms}
          id={id}
          class="flex last:rounded-bl-lg last:rounded-br-lg overflow-hidden"
        >
          <.room_button active={room.id == @params_room_id} name={room.name} room_id={room.id} />
        </li>
      </div>
    </ul>
  </nav>
  <article class="w-1/6">
    <ul class="flex flex-col gap-2">
      <li :for={{user, meta} <- @presences}>
        <div class="flex justify-between items-center bg-neutral py-2 px-4 rounded-lg border border-info text-center">
          <span class="flex items-center gap-2">
            <div class="avatar">
              <div class="h-6 w-6">
                <img src={"/images/#{meta.avatar}.png"} />
              </div>
            </div>
            <%= user %>
          </span>
          <.icon name={if meta.thinking, do: "hero-ellipsis-horizontal", else: "hero-check"} />
        </div>
      </li>
    </ul>
  </article>
  <article class="grow">
    <.simple_form
      class="mb-8 flex justify-between gap-8"
      for={@topic_form}
      phx-change="validate_topic"
      phx-submit="save_topic"
    >
      <:inputs>
        <div class="w-full">
          <.input
            class="grow"
            id="topic-input"
            autocomplete="off"
            autofocus="on"
            field={@topic_form[:subject]}
            label="Topic"
          />
        </div>
        <!-- won't overwrite with enter b/c element focus is not lost -->
        <.button disabled={@status == :pending}>Add</.button>
      </:inputs>
    </.simple_form>

    <table class="table">
      <thead>
        <tr>
          <th class="text-center">Topic</th>
          <th>Title</th>
          <th>Points</th>
          <th>Average</th>
        </tr>
      </thead>
      <tbody id="topics" phx-update="stream">
        <tr :for={{id, topic} <- @streams.topics} class="first:bg-base-300" id={id}>
          <td class="text-center rounded-tl-lg rounded-bl-lg"><%= topic.row_number %></td>
          <td><%= topic[:subject] %></td>
          <td>
            <.simple_form class="flex gap-2" for={@point_form} phx-change="save_point">
              <label :for={point_value <- ~w(1 2 3 5 8)} class="label gap-2 cursor-pointer">
                <span class="label-text"><%= point_value %></span>
                <input type="hidden" name="topic_id" value={id} />
                <input
                  disabled={!topic.current}
                  checked={topic.points[@username] == point_value}
                  class="radio radio-primary"
                  name="point"
                  type="radio"
                  value={point_value}
                />
              </label>
            </.simple_form>
          </td>
          <td>
            <%= topic.average %>
          </td>
          <td class="last:rounded-tr-lg rounded-br-lg">
            <.button class="btn-square btn-ghost" phx-click="remove_topic" phx-value-topic-id={id}>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-6 w-6"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            </.button>
          </td>
        </tr>
      </tbody>
    </table>
  </article>
</section>

<.modal :if={@live_action == :edit} id="room-modal" show on_cancel={JS.patch(~p"/rooms/#{@room}")}>
  <.live_component
    module={PingpokerWeb.RoomLive.FormComponent}
    id={@room.id}
    title={@page_title}
    action={@live_action}
    room={@room}
    patch={~p"/rooms/#{@room}"}
  />
</.modal>
